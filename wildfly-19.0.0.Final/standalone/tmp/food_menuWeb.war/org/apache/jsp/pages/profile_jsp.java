/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: WildFly Full 19.0.0.Final (WildFly Core 11.0.0.Final) - 2.0.30.Final
 * Generated at: 2020-05-30 17:40:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import entity.Client;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("entity.Client");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JBWEB004248: JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      response.addHeader("X-Powered-By", "JSP/2.3");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" />\r\n");
      out.write("\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>Food Menu</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"sortcut icon\" href=\"../assets/favicon.ico\"\r\n");
      out.write("\ttype=\"image/x-icon\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t");

		Client clientLogged = (Client) session.getAttribute("clientLogged");
	request.setAttribute("clientLogged", session.getAttribute("clientLogged"));
	if (clientLogged == null) {
		response.sendRedirect("./login.jsp");
	} else {
	
      out.write("\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-danger bg-danger\">\r\n");
      out.write("\t\t<a class=\"navbar-brand text-light font-weight-bold\"\r\n");
      out.write("\t\t\thref=\"../ClientServlet?pageURL=main.jsp?&clientID=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clientLogged.getId()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Food\r\n");
      out.write("\t\t\tMenu</a>\r\n");
      out.write("\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\tdata-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\"\r\n");
      out.write("\t\t\taria-expanded=\"false\">\r\n");
      out.write("\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n");
      out.write("\t\t\t<ul class=\"navbar-nav\">\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a\r\n");
      out.write("\t\t\t\t\tclass=\"nav-link text-light font-weight-bold\"\r\n");
      out.write("\t\t\t\t\thref=\"../ClientServlet?pageURL=profile.jsp?&clientID=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clientLogged.getId()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Perfil\r\n");
      out.write("\t\t\t\t</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a\r\n");
      out.write("\t\t\t\t\tclass=\"nav-link text-light font-weight-bold\"\r\n");
      out.write("\t\t\t\t\thref=\"../ClientServlet?pageURL=restaurant_edit.jsp?&clientID=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clientLogged.getId()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Restaurante</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item dropdown text-light\"><a\r\n");
      out.write("\t\t\t\t\tclass=\"nav-link dropdown-toggle text-light font-weight-bold\"\r\n");
      out.write("\t\t\t\t\thref=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\"\r\n");
      out.write("\t\t\t\t\tdata-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("\t\t\t\t\t\tCard√°pio </a>\r\n");
      out.write("\t\t\t\t\t<div class=\"dropdown-menu bg-danger\"\r\n");
      out.write("\t\t\t\t\t\taria-labelledby=\"navbarDropdownMenuLink\">\r\n");
      out.write("\t\t\t\t\t\t<a class=\"dropdown-item text-light font-weight-bold\"\r\n");
      out.write("\t\t\t\t\t\t\thref=\"../ClientServlet?pageURL=categories.jsp?&clientID=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clientLogged.getId()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Categorias</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"dropdown-item text-light font-weight-bold\"\r\n");
      out.write("\t\t\t\t\t\t\thref=\"../ClientServlet?pageURL=products.jsp?&clientID=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clientLogged.getId()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Produtos</a>\r\n");
      out.write("\t\t\t\t\t</div></li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a\r\n");
      out.write("\t\t\t\t\tclass=\"nav-link text-light font-weight-bold\"\r\n");
      out.write("\t\t\t\t\thref=\"../ClientServlet?pageURL=login.jsp\">Sair</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"card-body\">\r\n");
      out.write("\t\t<form class=\"needs-validation\" novalidate method=\"get\"\r\n");
      out.write("\t\t\taction=\"../ClientServlet\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"clientID\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clientLogged.getId()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t\t\t<input type=hidden name=_method value=PUT />\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group col-md-15 font-weight-bold\">\r\n");
      out.write("\t\t\t\t\t<label for=\"inputName\">Nome Completo</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"inputName\" name=\"name\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Qual o nome do dono do restaurante?\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"required\" value=\"");
      out.print(clientLogged.getName());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"invalid-feedback\">Por favor, informe o nome do\r\n");
      out.write("\t\t\t\t\t\tdono do restaurante.</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group col-md-15 font-weight-bold\">\r\n");
      out.write("\t\t\t\t\t<label for=\"inputEmail\">E-mail</label> <input type=\"email\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"inputEmail\" name=\"email\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Qual o e-mail do dono do restaurante?\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"required\" value=\"");
      out.print(clientLogged.getEmail());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"invalid-feedback\">Por favor, informe o e-mail do\r\n");
      out.write("\t\t\t\t\t\tdono do restaurante.</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group col-md-15 font-weight-bold\">\r\n");
      out.write("\t\t\t\t\t<label for=\"inputCpf\">CPF</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"inputCpf\" name=\"cpf\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Qual o CPF do dono do restaurante?\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"required\" value=\"");
      out.print(clientLogged.getCpf());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"invalid-feedback\">Por favor, informe o cpf do\r\n");
      out.write("\t\t\t\t\t\tdono do restaurante.</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group col-md-15 font-weight-bold\">\r\n");
      out.write("\t\t\t\t\t<label for=\"inputPassword\">Senha</label> <input type=\"password\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"inputPassword\" name=\"password\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Digite uma senha\" required=\"required\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(clientLogged.getPassword());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"invalid-feedback\">Por favor, informe a senha do\r\n");
      out.write("\t\t\t\t\t\tdono do restaurante.</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<button type=\"submit\" value=\"put\"\r\n");
      out.write("\t\t\t\tclass=\"btn btn-danger btn-lg btn-block font-weight-bold\">Salvar\r\n");
      out.write("\t\t\t\tMudan√ßas</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\t\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.0/jquery.mask.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$(\"#inputCpf\").mask(\"999.999.999-99\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// Exemplo de JavaScript inicial para desativar envios de formul√°rio, se houver campos inv√°lidos.\r\n");
      out.write("\t\t(function() {\r\n");
      out.write("\t\t\t'use strict';\r\n");
      out.write("\t\t\twindow.addEventListener('load',\r\n");
      out.write("\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t// Pega todos os formul√°rios que n√≥s queremos aplicar estilos de valida√ß√£o Bootstrap personalizados.\r\n");
      out.write("\t\t\t\t\t\tvar forms = document\r\n");
      out.write("\t\t\t\t\t\t\t\t.getElementsByClassName('needs-validation');\r\n");
      out.write("\t\t\t\t\t\t// Faz um loop neles e evita o envio\r\n");
      out.write("\t\t\t\t\t\tvar validation = Array.prototype.filter.call(forms,\r\n");
      out.write("\t\t\t\t\t\t\t\tfunction(form) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tform.addEventListener('submit', function(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tevent) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (form.checkValidity() === false) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tform.classList.add('was-validated');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}, false);\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}, false);\r\n");
      out.write("\t\t})();\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
